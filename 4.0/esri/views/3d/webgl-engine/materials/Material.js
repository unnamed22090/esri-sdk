// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/4.0/esri/copyright.txt for details.
//>>built
require({cache:{"url:esri/views/3d/webgl-engine/materials/Material.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\r\n\x3csnippets\x3e\r\n\r\n\x3csnippet name\x3d"vsPhongSrc"\x3e\x3c![CDATA[\r\n\tuniform mat4 proj;\r\n\tuniform mat4 view;\r\n#ifdef INSTANCED\r\n    attribute mat4 model;\r\n    attribute mat4 modelNormal;\r\n#else\r\n\tuniform mat4 model;\r\n\tuniform mat4 modelNormal;\r\n#endif\r\n#ifdef INSTANCEDCOLOR\r\n    attribute vec4 instanceColor;\r\n#endif\r\n\tattribute vec3 $position;\r\n\tattribute vec3 $normal;\r\n\tvarying vec3 vpos;\r\n\tvarying vec3 vnormal;\r\n\r\n#ifdef VERTEXCOLORS\r\n    attribute vec4 $color;\r\n#endif\r\n\r\n#if defined(VERTEXCOLORS) || defined(INSTANCEDCOLOR)\r\n    varying vec4 vcolor;\r\n#endif\r\n\r\n\r\n\tvoid main(void) {\r\n\t\tvpos \x3d (model * vec4($position, 1.0)).xyz;\r\n\t\tvnormal \x3d normalize((modelNormal * vec4($normal, 1.0)).xyz);\r\n\t\tgl_Position \x3d proj * view * vec4(vpos, 1.0);\r\n\r\n#if defined(VERTEXCOLORS) || defined(INSTANCEDCOLOR)\r\n        vcolor \x3d vec4(1,1,1,1);\r\n#endif\r\n#ifdef VERTEXCOLORS\r\n        vcolor *\x3d $color * 0.003921568627451; // \x3d 1/255\r\n#endif\r\n#ifdef INSTANCEDCOLOR\r\n        vcolor *\x3d instanceColor;\r\n#endif\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsPhongSrc"\x3e\x3c![CDATA[\r\n\tuniform vec3 camPos;\r\n\tuniform vec4 lightAmbient;\r\n\tuniform vec4 lightDiffuse;\r\n\tuniform vec4 lightSpecular;\r\n\tuniform vec3 lightDirection;\r\n\tuniform vec3 ambient;\r\n\tuniform vec3 diffuse;\r\n\tuniform vec3 specular;\r\n\tuniform float shininess;\r\n\tuniform float opacity;\r\n\tuniform sampler2D depthTex;\r\n\tuniform int shadowMapNum;\r\n\tuniform vec4 shadowMapDistance;\r\n\tuniform mat4 shadowMapMatrix[4];\r\n\tuniform float depthHalfPixelSz;\r\n\tuniform sampler2D ssaoTex;\r\n\tuniform vec4 viewportPixelSz;\r\n\tvarying vec3 vpos;\r\n\tvarying vec3 vnormal;\r\n#if defined(VERTEXCOLORS) || defined(INSTANCEDCOLOR)\r\n    varying vec4 vcolor;\r\n#endif\r\n\r\n\t$evalShadow\r\n\tvoid main() {\r\n\t\tvec3 a \x3d ambient * lightAmbient.rgb * lightAmbient.w;\r\n\r\n\t\tvec3 viewDir \x3d normalize(vpos - camPos);\r\n\r\n#ifndef DOUBLESIDED\r\n\t\tvec3 normal \x3d vnormal;\r\n#else\r\n\t\tvec3 normal \x3d dot(vnormal, viewDir)\x3e0.0?-vnormal:vnormal;\r\n#endif\r\n\r\n    normal \x3d normalize(normal);\r\n    \r\n\t\tfloat shadow \x3d evalShadow(vpos, 1.0 / gl_FragCoord.w, depthTex, shadowMapNum, shadowMapDistance, shadowMapMatrix, depthHalfPixelSz);\r\n\t\tvec3 d \x3d (1.0 - shadow) * diffuse * lightDiffuse.rgb * lightDiffuse.w * clamp(dot(normal, lightDirection), .0, 1.0);\r\n\r\n\t\tfloat opacity_ \x3d opacity;\r\n#if defined(VERTEXCOLORS) || defined(INSTANCEDCOLOR)\r\n        a *\x3d vcolor.rgb;\r\n        d *\x3d vcolor.rgb;\r\n        opacity_ *\x3d vcolor.a;\r\n#endif\r\n\r\n\t\tvec3 reflDir \x3d normalize(reflect(viewDir, normal));\r\n\t\tfloat specDot \x3d max(dot(reflDir, lightDirection), .001);\r\n\t\tvec3 s \x3d (1.0 - shadow) * specular * lightSpecular.rgb * lightSpecular.w * pow(specDot, shininess);\r\n\r\n\t\tfloat ssao \x3d texture2D(ssaoTex, (gl_FragCoord.xy - viewportPixelSz.xy) * viewportPixelSz.zw).a;\r\n\t\tssao \x3d viewportPixelSz.z \x3c 0.0 ? 1.0 : ssao;\r\n\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsPhong"\x3e\x3c![CDATA[\r\n\t$vsPhongSrc\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsPhong"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\r\n\t$fsPhongSrc\r\n\t\tgl_FragColor \x3d vec4(ssao * (a + d) + s, opacity_);\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsPhongTextured"\x3e\x3c![CDATA[\r\n\tattribute vec2 $uv0;\r\n\tvarying vec2 vtc;\r\n\t$vsPhongSrc\r\n#ifndef FLIPV\r\n\t\tvtc \x3d $uv0;\r\n#else\r\n        vtc \x3d vec2($uv0.x, 1.0-$uv0.y);\r\n#endif\r\n    \r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsPhongTextured"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\r\n\tuniform sampler2D tex;\r\n\tvarying vec2 vtc;\r\n\t$fsPhongSrc\r\n\t\tvec4 texColor \x3d texture2D(tex, vtc);\r\n\t\tif (texColor.a \x3c .33) discard;\r\n\t\tgl_FragColor \x3d vec4(ssao * texColor.rgb * (a + d) + s, texColor.a * opacity_);\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsPhongAtlasTextured"\x3e\x3c![CDATA[\r\n\tattribute vec4 $uv0;\r\n\tattribute vec4 $region;\r\n\tvarying vec2 vtc;\r\n\tvarying vec4 regionV;\r\n\t$vsPhongSrc\r\n#ifndef FLIPV\r\n        vtc \x3d $uv0.xy;\r\n#else\r\n        vtc \x3d vec2($uv0.x, 1.0-$uv0.y);\r\n#endif\r\n\t    regionV \x3d $region/65535.0;\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsPhongAtlasTextured"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\r\n\tuniform sampler2D tex;\r\n\tvarying vec2 vtc;\r\n\tvarying vec4 regionV;\r\n\r\n\t$fsPhongSrc\r\n\t\tvec2 uv \x3d vtc;\r\n\t\tuv \x3d fract(uv);\r\n\t\t//[umin, vmin, umax, vmax]\r\n\r\n\t\tuv \x3d uv.xy*(regionV.zw-regionV.xy)+regionV.xy;\r\n\t\tvec4 texColor \x3d texture2D(tex, uv);\r\n\t\tif (texColor.a \x3c .33) discard;\r\n\t\tgl_FragColor \x3d vec4(ssao * texColor.rgb * (a + d) + s, texColor.a * opacity_);\r\n\t\t//gl_FragColor \x3d regionV;\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsPhongTexturedRefl"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\r\n\tuniform sampler2D tex;\r\n\tuniform sampler2D reflTex;\r\n\tuniform float reflectivity;\r\n\tvarying vec2 vtc;\r\n\r\n\t$normal2envTC\r\n\r\n\t$fsPhongSrc\r\n\t\tvec4 texColor \x3d texture2D(tex, vtc);\r\n\t\tif (texColor.a \x3c .33) discard;\r\n\t\tvec4 reflColor \x3d texture2D(reflTex, normal2envTC(reflDir));\r\n\t\tgl_FragColor \x3d vec4(ssao * mix(texColor.rgb * (a + d), reflColor.rgb * lightAmbient.rgb*lightSpecular.w, reflectivity) + s, texColor.a * opacity_);\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsDepthSrc"\x3e\x3c![CDATA[\r\n\tuniform mat4 proj;\r\n\tuniform mat4 view;\r\n\tuniform mat4 model;\r\n\tuniform vec2 nearFar;\r\n\tattribute vec3 $position;\r\n\tvarying float depth;\r\n\r\n\tvoid main(void) {\r\n\t\tvec4 eye \x3d view * model * vec4($position, 1.0);\r\n\t\tgl_Position \x3d proj * eye;\r\n\t\tdepth \x3d (-eye.z - nearFar[0]) / (nearFar[1] - nearFar[0]) ;\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsDepth"\x3e\x3c![CDATA[\r\n\t$vsDepthSrc\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsDepthTextured"\x3e\x3c![CDATA[\r\n\tattribute vec2 $uv0;\r\n\tvarying vec2 vtc;\r\n\t$vsDepthSrc\r\n#ifndef FLIPV\r\n        vtc \x3d $uv0;\r\n#else\r\n        vtc \x3d vec2($uv0.x, 1.0-$uv0.y);\r\n#endif\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsNormalSrc"\x3e\x3c![CDATA[\r\n\tuniform mat4 proj;\r\n\tuniform mat4 view;\r\n\tuniform mat4 model;\r\n\tuniform mat4 viewNormal;\r\n\tuniform mat4 modelNormal;\r\n\tattribute vec3 $position;\r\n\tattribute vec3 $normal;\r\n\tvarying vec3 vnormal;\r\n\r\n\tvoid main(void) {\r\n\t\tgl_Position \x3d proj * view * model * vec4($position, 1.0);\r\n\t\tvnormal \x3d normalize((viewNormal * modelNormal * vec4($normal, 1.0)).xyz);\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsNormal"\x3e\x3c![CDATA[\r\n\t$vsNormalSrc\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsNormalTextured"\x3e\x3c![CDATA[\r\n\tattribute vec2 $uv0;\r\n\tvarying vec2 vtc;\r\n\t$vsNormalSrc\r\n#ifndef FLIPV\r\n\t\tvtc \x3d $uv0;\r\n#else\r\n        vtc \x3d vec2($uv0.x, 1.0-$uv0.y);\r\n#endif\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsHighlightSrc"\x3e\x3c![CDATA[\r\n\tuniform mat4 proj;\r\n\tuniform mat4 view;\r\n\tuniform mat4 model;\r\n\tattribute vec3 $position;\r\n\r\n\tvoid main(void) {\r\n\t\tgl_Position \x3d proj * view * model * vec4($position, 1.0);\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsHighlight"\x3e\x3c![CDATA[\r\n\t$vsHighlightSrc\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsHighlightTextured"\x3e\x3c![CDATA[\r\n\tattribute vec2 $uv0;\r\n\tvarying vec2 vtc;\r\n\t$vsHighlightSrc\r\n#ifndef FLIPV\r\n\t\tvtc \x3d $uv0;\r\n#else\r\n    vtc \x3d vec2($uv0.x, 1.0-$uv0.y);\r\n#endif\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsDepthSrc"\x3e\x3c![CDATA[\r\n\tvarying float depth;\r\n\r\n\tvoid main() {\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsDepth"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\t$calcFragDepth\r\n\t$float2rgba\r\n\t$fsDepthSrc\r\n#ifndef BIAS_SHADOWMAP\r\n\t\tgl_FragColor \x3d float2rgba(depth);\r\n#else\r\n\t\tgl_FragColor \x3d float2rgba(calcFragDepth(depth));\r\n#endif\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsDepthTextured"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\r\n\tuniform sampler2D tex;\r\n\tvarying vec2 vtc;\r\n\t$calcFragDepth\r\n\t$float2rgba\r\n\r\n\t$fsDepthSrc\r\n\t\tif (texture2D(tex, vtc).a \x3c .33) discard;\r\n#ifndef BIAS_SHADOWMAP\r\n\t\tgl_FragColor \x3d float2rgba(depth);\r\n#else\r\n\t\tgl_FragColor \x3d float2rgba(calcFragDepth(depth));\r\n#endif\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsNormal"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\r\n\tvarying vec3 vnormal;\r\n\tvoid main() {\r\n\t\tvec3 normal \x3d normalize(vnormal);\r\n\t\tif (gl_FrontFacing \x3d\x3d false) normal \x3d -normal;\r\n\r\n#ifndef ALPHA_ZERO\r\n\t\tgl_FragColor \x3d vec4(vec3(.5) + .5 * normal, 1.0);\r\n#else\r\n\t\tgl_FragColor \x3d vec4(vec3(.5) + .5 * normal, 0.0);\r\n#endif\r\n\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsNormalTextured"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\r\n\tvarying vec3 vnormal;\r\n\tvarying vec2 vtc;\r\n\tuniform sampler2D tex;\r\n\tvoid main() {\r\n\t\tif (texture2D(tex, vtc).a \x3c .33) discard;\r\n\t\tvec3 normal \x3d normalize(vnormal);\r\n\t\tif (gl_FrontFacing \x3d\x3d false) normal \x3d -normal;\r\n#ifndef ALPHA_ZERO\r\n\t\tgl_FragColor \x3d vec4(vec3(.5) + .5 * normal, 1.0);\r\n#else\r\n\t\tgl_FragColor \x3d vec4(vec3(.5) + .5 * normal, 0.0);\r\n#endif\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsHighlight"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\r\n\tvoid main() {\r\n\t\tgl_FragColor \x3d vec4(1.0, 1.0, 1.0, 1.0);\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsHighlightTextured"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\tvarying vec2 vtc;\r\n\tuniform sampler2D tex;\r\n\tvoid main() {\r\n\t\tif (texture2D(tex, vtc).a \x3c .33) discard;\r\n    gl_FragColor \x3d vec4(1.0, 1.0, 1.0, 1.0);\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3c/snippets\x3e'}});
define("dojo/_base/lang dojo/text!./Material.xml ./internal/MaterialUtil ../lib/GLSLProgram ../lib/GLSLShader ../lib/ShaderVariations ../lib/Util ../lib/gl-matrix ../lib/RenderSlot".split(" "),function(r,B,k,p,m,C,q,z,n){var x=q.assert,v=z.vec3,A,s=v.create();q=function(b,f){k.basicMaterialConstructor(this,f);b=b||{};b.ambient=b.ambient||[0.2,0.2,0.2];b.diffuse=b.diffuse||[0.8,0.8,0.8];b.specular=b.specular||[0,0,0];b.shininess=b.shininess||10;b.opacity=void 0!==b.opacity?b.opacity:1;b.blendModeOneOne=
b.blendModeOneOne||!1;b.inverseWindingOrder=b.inverseWindingOrder||!1;b.vertexColors=b.vertexColors||!1;b.flipV=b.flipV||!1;b.doubleSided=b.doubleSided||!1;b.cullFace=b.cullFace||void 0;b.instanced=b.instanced||!1;this.instanced=!!b.instanced;b.textureId||(b.reflTextureId=void 0);var e;e=b.textureId?b.atlasRegions?"PosNormTexRegion":"PosNormTex":"PosNorm";b.vertexColors&&(e+="Col");var a=k.Layouts[e],c=b.instanced?k.Layouts.ModelCol:null;b.instanced&&(c=-1<b.instanced.indexOf("color")?k.Layouts.ModelCol:
k.Layouts.Model);this.dispose=function(){};this.getParams=function(){return b};this.getParameterValues=function(){var a={ambient:b.ambient,diffuse:b.diffuse,specular:b.specular,shininess:b.shininess,opacity:b.opacity,transparent:b.transparent,polygonOffset:b.polygonOffset,reflectivity:b.reflectivity,atlasRegions:b.atlasRegions,flipV:b.flipV,doubleSided:b.doubleSided,cullFace:b.cullFace};b.textureId&&(a.textureId=b.textureId,a.initTexture=b.initTexture);return a};this.setParameterValues=function(a){for(var c in a)"textureId"===
c&&x(b.textureId,"Can only change texture of material that already has a texture"),b[c]=a[c];this.notifyDirty("matChanged")};this.getOutputAmount=function(b){return b*a.getStride()};this.getVertexBufferLayout=function(){return a};this.getInstanceBufferLayout=function(){return c};this.fillInterleaved=function(b,c,l,g,e,d,f){k.fillInterleaved(b,c,l,g,a,e,d,f)};this.intersect=k.intersectTriangleGeometry;this.getGLMaterials=function(){return{color:E,depthShadowMap:F,normal:G,depth:y,highlight:H}};this.getAllTextureIds=
function(){var a=[];b.textureId&&a.push(b.textureId);b.reflTextureId&&a.push(b.reflTextureId);return a}};q.paramsFromOldConstructor=function(b,f,e,a,c,h,w,l,g,k,d,D,m){return{textureId:b,transparent:f,ambient:e,diffuse:a,specular:c,shininess:h,opacity:w,polygonOffset:l,initTexture:g,reflTextureId:k,reflectivity:d,flipV:D,doubleSided:m,cullFace:void 0}};var t=function(b,f){var e=f.cullFace?"none"!==f.cullFace:f.transparent?!1:!0;b.web3DDefaultState.cullEnabled!==e&&(e?(b.enable(b.CULL_FACE),"front"===
f.cullFace&&b.cullFace(b.FRONT)):b.disable(b.CULL_FACE))},u=function(b,f){var e=f.cullFace?"none"!==f.cullFace:f.transparent?!1:!0;b.web3DDefaultState.cullEnabled!==e&&(e?(b.disable(b.CULL_FACE),"front"===f.cullFace&&b.cullFace(b.BACK)):b.enable(b.CULL_FACE))},E=function(b,f,e){k.basicGLMaterialConstructor(this,b);var a=r.clone(b.getParams()),c=a.transparent?n.TRANSPARENT_MATERIAL:n.OPAQUE_MATERIAL;k.singleTextureGLMaterialConstructor(this,e,a);var h=k.aquireIfNotUndefined(a.reflTextureId,a.reflInitTexture,
e);x(!(a.atlasRegions&&a.reflTextureId),"Atlas texture with reflection is not yet supported");var w=!a.textureId?"none":a.atlasRegions?"AtlasTextured":"Textured";this.instanced=A&&a.instanced;var l=!!this.instanced&&-1<this.instanced.indexOf("color"),g=f.shaderVariators.Material.getProgram([w,!!a.reflTextureId,a.vertexColors,a.flipV,a.doubleSided,!!this.instanced,l]),m=this.dispose;this.dispose=function(){m();k.releaseIfNotUndefined(a.reflTextureId,e)};this.beginSlot=function(b){return c===b};this.getProgram=
function(){return g};this.updateParameters=function(){var d=b.getParams();a.ambient=d.ambient;a.diffuse=d.diffuse;a.specular=d.specular;a.shininess=d.shininess;a.opacity=d.opacity;a.polygonOffset=d.polygonOffset;a.reflectivity=d.reflectivity;a.flipV=d.flipV;a.doubleSided=d.doubleSided;a.cullFace=d.cullFace;a.transparent!=d.transparent&&(c=d.transparent?n.TRANSPARENT_MATERIAL:n.OPAQUE_MATERIAL,a.transparent=d.transparent);a.initTexture=d.initTexture;this.updateTexture(d.textureId);d.atlasRegions&&
(a.atlasRegions=d.atlasRegions);a.blendModeOneOne=d.blendModeOneOne;a.inverseWindingOrder=d.inverseWindingOrder};this.bind=function(d,l){g.use();g.uniform3fv("ambient",a.ambient);g.uniform3fv("diffuse",a.diffuse);g.uniform3fv("specular",a.specular);g.uniform1f("shininess",a.shininess);g.uniform1f("opacity",a.opacity);l.shadowMap||g.uniform1f("depthHalfPixelSz",-1);this.bindTexture(d,g);void 0!==h&&(g.uniform1i("reflTex",1),d.activeTexture(d.TEXTURE1),d.bindTexture(d.TEXTURE_2D,h),d.activeTexture(d.TEXTURE0),
g.uniform1f("reflectivity",a.reflectivity));b.getVertexBufferLayout().enableVertexAttribArrays(d,g,!1);this.instanced&&b.getInstanceBufferLayout().enableVertexAttribArrays(d,g,l.extensions.angleInstancedArrays);a.inverseWindingOrder&&d.frontFace(d.CW);a.transparent&&(d.enable(d.BLEND),a.blendModeOneOne&&(d.blendFunc(d.ONE,d.ONE),d.depthMask(!1)));a.polygonOffset&&(d.enable(d.POLYGON_OFFSET_FILL),d.polygonOffset(2,2));t(d,a)};this.release=function(d,l){a.polygonOffset&&d.disable(d.POLYGON_OFFSET_FILL);
u(d,a);a.transparent&&(d.disable(d.BLEND),a.blendModeOneOne&&(d.blendFunc(d.web3DDefaultState.blendFuncSrc,d.web3DDefaultState.blendFuncDst),d.depthMask(!0)));a.inverseWindingOrder&&d.frontFace(d.CCW);b.getVertexBufferLayout().disableVertexAttribArrays(d,g,!1);this.instanced&&b.getInstanceBufferLayout().disableVertexAttribArrays(d,g,l.extensions.angleInstancedArrays)};this.bindView=function(b,a){var l=a.origin;k.bindView(l,a.view,g);k.bindCamPos(l,a.viewInvTransp,g);a.shadowMap&&a.shadowMap.bindView(g,
l)};this.bindInstance=function(b,c){g.uniformMatrix4fv("model",c.transformation);g.uniformMatrix4fv("modelNormal",c.transformationNormal);if(l&&c.instanceParameters){var e=c.instanceParameters.color;e&&(v.multiply(a.ambient,e,s),g.uniform3fv("ambient",s),v.multiply(a.diffuse,e,s),g.uniform3fv("diffuse",s),g.uniform1f("opacity",a.opacity*e[3]))}};this.getDrawMode=function(b){return b.TRIANGLES}},y=function(b,f,e,a){k.basicGLMaterialConstructor(this,b);var c=r.clone(b.getParams()),h=null!=a?f.get(b.getVertexBufferLayout().hasAttribute("uv0")?
"depthTexturedShadowMap":"depthShadowMap"):f.get(b.getVertexBufferLayout().hasAttribute("uv0")?"depthTextured":"depth"),w=c.transparent?n.TRANSPARENT_MATERIAL:n.OPAQUE_MATERIAL;k.singleTextureGLMaterialConstructor(this,e,c);this.beginSlot=function(b){return w===b};this.getProgram=function(){return h};this.updateParameters=function(){var a=b.getParams();c.initTexture=a.initTexture;c.cullFace=a.cullFace;c.inverseWindingOrder=a.inverseWindingOrder;this.updateTexture(a.textureId)};this.bind=function(a,
g){h.use();h.uniform2fv("nearFar",g.nearFar);c.inverseWindingOrder&&a.frontFace(a.CW);this.bindTexture(a,h);b.getVertexBufferLayout().enableVertexAttribArrays(a,h);t(a,c)};this.release=function(a){u(a,c);c.inverseWindingOrder&&a.frontFace(a.CCW);b.getVertexBufferLayout().disableVertexAttribArrays(a,h)};this.bindView=function(a,b){k.bindView(b.origin,b.view,h)};this.bindInstance=function(a,b){h.uniformMatrix4fv("model",b.transformation)};this.getDrawMode=function(a){return a.TRIANGLES}},F=function(b,
f,e){y.call(this,b,f,e,!0)},G=function(b,f,e){k.basicGLMaterialConstructor(this,b);var a=r.clone(b.getParams()),c=f.get(b.getVertexBufferLayout().hasAttribute("uv0")?"normalTextured":"normal"),h=a.transparent?n.TRANSPARENT_MATERIAL:n.OPAQUE_MATERIAL;k.singleTextureGLMaterialConstructor(this,e,a);this.beginSlot=function(a){return h===a};this.getProgram=function(){return c};this.updateParameters=function(){var c=b.getParams();a.initTexture=c.initTexture;a.cullFace=c.cullFace;a.inverseWindingOrder=c.inverseWindingOrder;
this.updateTexture(c.textureId)};this.bind=function(e,l){c.use();this.bindTexture(e,c);c.uniformMatrix4fv("viewNormal",l.viewInvTransp);b.getVertexBufferLayout().enableVertexAttribArrays(e,c);t(e,a);a.inverseWindingOrder&&e.frontFace(e.CW)};this.release=function(e){u(e,a);a.inverseWindingOrder&&e.frontFace(e.CCW);b.getVertexBufferLayout().disableVertexAttribArrays(e,c)};this.bindView=function(a,b){k.bindView(b.origin,b.view,c)};this.bindInstance=function(a,b){c.uniformMatrix4fv("model",b.transformation);
c.uniformMatrix4fv("modelNormal",b.transformationNormal)};this.getDrawMode=function(a){return a.TRIANGLES}},H=function(b,f,e,a){k.basicGLMaterialConstructor(this,b);var c=r.clone(b.getParams()),h=f.get(b.getVertexBufferLayout().hasAttribute("uv0")?"highlightTextured":"highlight"),m=n.OPAQUE_MATERIAL;k.singleTextureGLMaterialConstructor(this,e,c);this.beginSlot=function(a){return m===a};this.getProgram=function(){return h};this.updateParameters=function(){var a=b.getParams();c.initTexture=a.initTexture;
c.cullFace=a.cullFace;c.inverseWindingOrder=a.inverseWindingOrder;this.updateTexture(a.textureId)};this.bind=function(a,e){h.use();this.bindTexture(a,h);b.getVertexBufferLayout().enableVertexAttribArrays(a,h);t(a,c);c.inverseWindingOrder&&a.frontFace(a.CW)};this.release=function(a){u(a,c);c.inverseWindingOrder&&a.frontFace(a.CCW);b.getVertexBufferLayout().disableVertexAttribArrays(a,h)};this.bindView=function(a,b){k.bindView(b.origin,b.view,h)};this.bindInstance=function(a,b){h.uniformMatrix4fv("model",
b.transformation);h.uniformMatrix4fv("modelNormal",b.transformationNormal)};this.getDrawMode=function(a){return a.TRIANGLES}};q.loadShaders=function(b,f,e,a){b._parse(B);a.getExtension("OES_standard_derivatives");A=a.getExtension("ANGLE_instanced_arrays");var c=new C("phong",["vsPhong","fsPhong"],null,e,f,b,a);c.addNaryShaderSnippetSuffix([{value:"none",programNameSuffix:"",shaderSnippetSuffix:""},{value:"Textured"},{value:"AtlasTextured"}]);c.addBinaryShaderSnippetSuffix("Refl","Refl",[!1,!0]);c.addDefine("Color",
"VERTEXCOLORS");c.addDefine("FlipV","FLIPV");c.addDefine("DoubleSided","DOUBLESIDED");c.addDefine("Instanced","INSTANCED");c.addDefine("InstColor","INSTANCEDCOLOR");e.shaderVariators.Material=c;var c=new m(a.VERTEX_SHADER,b.vsDepth,a),h=new m(a.VERTEX_SHADER,b.vsDepthTextured,a),k=new m(a.VERTEX_SHADER,b.vsNormal,a),l=new m(a.VERTEX_SHADER,b.vsNormalTextured,a),g=new m(a.VERTEX_SHADER,b.vsHighlight,a),n=new m(a.VERTEX_SHADER,b.vsHighlightTextured,a),d=new m(a.FRAGMENT_SHADER,b.fsDepth,a,["BIAS_SHADOWMAP 1"]),
q=new m(a.FRAGMENT_SHADER,b.fsDepthTextured,a,["BIAS_SHADOWMAP 1"]),r=new m(a.FRAGMENT_SHADER,b.fsDepth,a),s=new m(a.FRAGMENT_SHADER,b.fsDepthTextured,a),t=new m(a.FRAGMENT_SHADER,b.fsNormal,a),u=new m(a.FRAGMENT_SHADER,b.fsNormalTextured,a),v=new m(a.FRAGMENT_SHADER,b.fsHighlight,a),x=new m(a.FRAGMENT_SHADER,b.fsHighlightTextured,a);b=new p([c,d],a);var y=new p([h,q],a),z=new p([c,r],a),h=new p([h,s],a),k=new p([k,t],a),l=new p([l,u],a),g=new p([g,v],a);a=new p([n,x],a);e.add("depthShadowMap",b);
e.add("depthTexturedShadowMap",y);e.add("depth",z);e.add("depthTextured",h);e.add("normal",k);e.add("normalTextured",l);e.add("highlight",g);e.add("highlightTextured",a);f.add("fsDepth",r);f.add("fsDepthTextured",s);f.add("fsDepthShadowMap",d);f.add("fsDepthTexturedShadowMap",q);f.add("vsDepth",c);f.add("fsNormal",t)};return q});