// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/4.0/esri/copyright.txt for details.
//>>built
require({cache:{"url:esri/views/3d/webgl-engine/materials/internal/SimpleGLMaterial.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\r\n\x3csnippets\x3e\r\n\r\n\x3csnippet name\x3d"vertexShaderSimple"\x3e\x3c![CDATA[\r\n\tuniform mat4 proj;\r\n\tuniform mat4 view;\r\n\tuniform mat4 model;\r\n\tattribute vec3 $position;\r\n\r\n\tvoid main(void) {\r\n\t\tgl_Position \x3d proj * view * vec4((model * vec4($position, 1.0)).xyz, 1.0);\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fragmentShaderSimple"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\r\n\tuniform vec4 color;\r\n\r\n\tvoid main() {\r\n\t\tgl_FragColor \x3d color;\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\x3c/snippets\x3e'}});
define("require exports dojo/text!./SimpleGLMaterial.xml ./MaterialUtil ../../lib/GLSLProgram ../../lib/GLSLShader ../../lib/RenderSlot".split(" "),function(m,n,g,d,h,e,k){var f=d.Layouts.Pos;return function(){function b(a,l,b,c){void 0===c&&(c=4);this.id=d.__GLMaterial_id++;this.program=a.get("simple");this.color=l;this.depthFunc=b;this.drawMode=c}b.prototype.getId=function(){return this.id};b.prototype.beginSlot=function(a){return a===k.INTERNAL_MATERIAL};b.prototype.getProgram=function(){return this.program};
b.prototype.bind=function(a,b){this.program.use();this.program.uniformMatrix4fv("model",d.IDENTITY);this.program.uniformMatrix4fv("proj",b.proj);this.program.uniform4fv("color",this.color);f.enableVertexAttribArrays(a,this.program,void 0);a.enable(a.BLEND);void 0!==this.depthFunc&&a.depthFunc(this.depthFunc)};b.prototype.release=function(a){void 0!==this.depthFunc&&a.depthFunc(a.LESS);a.disable(a.BLEND);f.disableVertexAttribArrays(a,this.program,void 0)};b.prototype.bindView=function(a,b){d.bindView(b.origin,
b.view,this.program)};b.prototype.bindInstance=function(a,b){this.program.uniformMatrix4fv("model",b.transformation)};b.prototype.getDrawMode=function(a){return this.drawMode};b.loadShaders=function(a,b,d,c){a._parse(g);b=new e(c.VERTEX_SHADER,a.vertexShaderSimple,c,void 0);a=new e(c.FRAGMENT_SHADER,a.fragmentShaderSimple,c,void 0);c=new h([b,a],c);d.add("simple",c)};return b}()});